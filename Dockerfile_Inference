FROM pytorch/pytorch:1.9.0-cuda11.1-cudnn8-devel

RUN pip install scipy
RUN pip install pycocotools
RUN pip install einops
RUN pip install tensorboard

ARG UID
ARG USER
ARG GID
ARG PW

RUN groupadd --gid $GID $USER
RUN useradd -m -u ${UID} -g $USER $USER && echo $USER:$PW | chpasswd


ENV TORCH_HOME=/workdir/.torch/

ENV TZ=Europe/Samara
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

RUN apt update
RUN apt install libavcodec-dev libavformat-dev libavutil-dev libswscale-dev libavresample-dev wget unzip cmake ninja-build git yasm nasm mercurial-common curl g++ autoconf libtool pkg-config python3-pip -yq

RUN \
cd /opt; \
git clone --depth 1 https://code.videolan.org/videolan/x264.git; \
cd x264; \
./configure --enable-static --enable-shared; \
make -j 4; \
make install

RUN \
cd /opt; \
git clone https://github.com/videolan/x265; \
cd x265/build/linux; \
cmake -GNinja -DENABLE_SHARED=ON ../../source; \
ninja -j 4; \
ninja install

RUN \
cd /opt; \
git clone --depth 1 https://chromium.googlesource.com/webm/libvpx.git; \
cd libvpx; \
./configure --disable-examples --disable-unit-tests --enable-vp9-highbitdepth --as=yasm --enable-shared; \
make -j4; \
make install

RUN \
cd /opt; \
git clone --depth 1 https://github.com/mstorsjo/fdk-aac; \
cd fdk-aac; \
autoreconf -fiv; \
./configure --enable-shared; \
make -j4; \
make install

RUN \
cd /opt; \
curl -O -L https://downloads.sourceforge.net/project/lame/lame/3.100/lame-3.100.tar.gz; \
tar xzvf lame-3.100.tar.gz; \
cd lame-3.100; \
./configure --enable-nasm --enable-shared; \
make -j4; \
make install

RUN \
cd /opt; \
curl -O -L https://ftp.osuosl.org/pub/xiph/releases/opus/opus-1.3.1.tar.gz; \
tar xzvf opus-1.3.1.tar.gz; \
cd opus-1.3.1; \
./configure --enable-shared; \
make -j4; \
make install

RUN \
cd /opt/; \
curl -L -O http://download.savannah.gnu.org/releases/freetype/freetype-2.10.4.tar.gz; \
tar zxfv freetype-2.10.4.tar.gz; \
cd freetype-2.10.4; \
./autogen.sh; \
./configure; \
make -j 4; \
make install 

RUN \
cd /opt/; \
git clone https://git.videolan.org/git/ffmpeg/nv-codec-headers.git; \
cd nv-codec-headers; \
make -j 4; \
make install

RUN \
cd /opt; \
curl -O -L https://ffmpeg.org/releases/ffmpeg-4.4.tar.bz2; \
tar xjf ffmpeg-4.4.tar.bz2 

RUN \
cd /opt/ffmpeg-4.4; \
./configure \
  --pkg-config-flags="--static" \
  --enable-cuda \
  --enable-cuvid \
  --enable-nvenc \
  --enable-libopus \
  --extra-libs=-lpthread \
  --extra-libs=-lm \
  --enable-gpl \
  --enable-libfreetype \
  --enable-libx264 \
  --enable-libx265 \
  --enable-nonfree \
  --enable-shared \
  --enable-libvpx ; \
make -j; \
make install 

RUN \
wget -O /opt/opencv.zip https://github.com/opencv/opencv/archive/master.zip; \
cd /opt; \
unzip -qq opencv.zip

RUN \
cd /opt/; \
mkdir opencv; cd opencv; \
cmake -GNinja \
-DOPENCV_GENERATE_PKGCONFIG=ON \
-DBUILD_NEW_PYTHON_SUPPORT=ON \
-DBUILD_opencv_python3=ON \
-DPYTHON3_INCLUDE_DIR=/opt/conda/include/python3.7m/ \
-DPYTHON3_LIBRARY=/opt/conda/lib/libpython3.7m.so.1.0 \
-DPYTHON3_EXECUTABLE=/opt/conda/bin/python \
-DPYTHON3_NUMPY_INCLUDE_DIRS=/opt/conda/lib/python3.7/site-packages/numpy/core/include/ \
-DPYTHON3_PACKAGES_PATH=/opt/conda/lib/python3.7/site-packages/ \
../opencv-master; \
ninja -j default; \
ninja install

RUN cd /opt/x264; \
make install; \
ldconfig

RUN rm -f /opt/*.bz2
RUN rm -f /opt/*.gz
RUN rm -f /opt/*.zip

ENV PYTHONPATH=/usr/local/lib/python2.7/site-packages:$PYTHONPATH

USER ${UID}:${GID}
ENTRYPOINT [""]

#-DPYTHON3_LIBRARIES=/opt/conda/lib/python3.7/site-packages/ \